/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        mutemic: mutemic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_GUI>,
                <&macro_tap>,
                <&kp F12>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND>;

            label = "MUTEMIC";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_GUI>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND>;

            label = "SCREENSHOT";
        };

        todoadd: todoadd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>;

            label = "TODOADD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E             &kp R         &kp T           &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D             &kp F         &kp G           &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V         &kp B           &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI    &kp SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4  &kp N5              &kp NUMBER_6    &kp N7    &kp N8        &kp N9     &kp N0   &kp BACKSPACE
&trans          &trans        &trans        &trans            &trans        &trans              &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp SQT  &kp ENTER
&kp LEFT_SHIFT  &kp F1        &kp F2        &kp F3            &kp F4        &kp F5              &kp F8          &kp F9    &kp F10       &kp F11    &kp F12  &kp RIGHT_SHIFT
                                            &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND    &kp SPACE       &trans    &mo 2
            >;
        };

        raise_layer {
            bindings = <
&kp ESCAPE      &trans    &trans       &kp C_NEXT        &kp C_BRI_UP  &kp C_VOLUME_UP      &trans            &trans         &trans   &kp MINUS          &kp EQUAL             &kp BACKSPACE
&kp TAB         &todoadd  &screenshot  &trans            &trans        &kp K_MUTE           &kp LEFT_BRACKET  &kp SEMICOLON  &kp SQT  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &kp ENTER
&kp LEFT_SHIFT  &trans    &trans       &kp C_PREV        &kp C_BRI_DN  &kp C_VOLUME_DOWN    &trans            &mutemic       &trans   &trans             &trans                &kp LEFT_SHIFT
                                       &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND     &kp SPACE         &mo 1          &trans
            >;
        };
    };
};
